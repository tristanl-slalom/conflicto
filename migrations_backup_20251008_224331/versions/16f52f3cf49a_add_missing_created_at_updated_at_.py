"""add missing created_at updated_at columns

Revision ID: 16f52f3cf49a
Revises: 21f24228dbb3
Create Date: 2025-10-08 17:12:47.152226

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects.postgresql import JSONB

# revision identifiers, used by Alembic.
revision = "16f52f3cf49a"
down_revision = "21f24228dbb3"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "activities",
        "status",
        existing_type=postgresql.ENUM(
            "draft", "active", "completed", "cancelled", name="new_activity_status"
        ),
        type_=sa.String(length=20),
        existing_nullable=False,
        existing_server_default=sa.text("'draft'::new_activity_status"),
    )
    # Note: Index names were updated after table rename from new_activities to activities
    # Drop indexes if they exist (use IF EXISTS to avoid errors)
    op.execute("DROP INDEX IF EXISTS idx_new_activities_config_gin")
    op.execute("DROP INDEX IF EXISTS idx_activities_config_gin")
    op.execute("DROP INDEX IF EXISTS idx_new_activities_session_order")
    op.execute("DROP INDEX IF EXISTS idx_activities_session_order")
    op.execute("DROP INDEX IF EXISTS idx_new_activities_status")
    op.execute("DROP INDEX IF EXISTS idx_activities_status")
    op.execute("DROP INDEX IF EXISTS idx_new_activities_type")
    op.execute("DROP INDEX IF EXISTS idx_activities_type")
    op.add_column(
        "participants",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.add_column(
        "participants",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
    )
    op.alter_column(
        "participants",
        "display_name",
        existing_type=sa.VARCHAR(length=100),
        nullable=True,
    )
    op.alter_column(
        "participants", "is_active", existing_type=sa.BOOLEAN(), nullable=False
    )
    op.alter_column(
        "participants",
        "connection_data",
        existing_type=postgresql.JSON(astext_type=sa.Text()),
        type_=JSONB(),
        existing_nullable=True,
    )
    op.drop_constraint(
        op.f("participants_session_id_fkey"), "participants", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "participants", "sessions", ["session_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("participants", "last_seen_at")
    op.drop_index(op.f("idx_user_responses_created_at"), table_name="user_responses")
    op.drop_index(
        op.f("idx_user_responses_data_gin"),
        table_name="user_responses",
        postgresql_using="gin",
    )
    op.drop_index(op.f("idx_user_responses_participant"), table_name="user_responses")
    op.drop_index(
        op.f("idx_user_responses_session_activity"), table_name="user_responses"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        op.f("idx_user_responses_session_activity"),
        "user_responses",
        ["session_id", "activity_id"],
        unique=False,
    )
    op.create_index(
        op.f("idx_user_responses_participant"),
        "user_responses",
        ["participant_id"],
        unique=False,
    )
    op.create_index(
        op.f("idx_user_responses_data_gin"),
        "user_responses",
        ["response_data"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_user_responses_created_at"),
        "user_responses",
        ["created_at"],
        unique=False,
    )
    op.add_column(
        "participants",
        sa.Column(
            "last_seen_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "participants", type_="foreignkey")
    op.create_foreign_key(
        op.f("participants_session_id_fkey"),
        "participants",
        "sessions",
        ["session_id"],
        ["id"],
    )
    op.alter_column(
        "participants",
        "connection_data",
        existing_type=JSONB(),
        type_=postgresql.JSON(astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "participants", "is_active", existing_type=sa.BOOLEAN(), nullable=True
    )
    op.alter_column(
        "participants",
        "display_name",
        existing_type=sa.VARCHAR(length=100),
        nullable=False,
    )
    op.drop_column("participants", "updated_at")
    op.drop_column("participants", "created_at")
    # Recreate indexes with correct names for the activities table
    op.create_index("idx_activities_type", "activities", ["type"], unique=False)
    op.create_index("idx_activities_status", "activities", ["status"], unique=False)
    op.create_index(
        "idx_activities_session_order",
        "activities",
        ["session_id", "order_index"],
        unique=False,
    )
    op.create_index(
        "idx_activities_config_gin",
        "activities",
        ["config"],
        unique=False,
        postgresql_using="gin",
    )
    op.alter_column(
        "activities",
        "status",
        existing_type=sa.String(length=20),
        type_=postgresql.ENUM(
            "draft", "active", "completed", "cancelled", name="new_activity_status"
        ),
        existing_nullable=False,
        existing_server_default=sa.text("'draft'::new_activity_status"),
    )
    # ### end Alembic commands ###
