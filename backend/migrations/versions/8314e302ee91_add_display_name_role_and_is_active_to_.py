"""Add display_name, role, and is_active to participants

Revision ID: 8314e302ee91
Revises: 7b81da24b89f
Create Date: 2025-10-08 13:39:25.841779

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8314e302ee91'
down_revision = '7b81da24b89f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('activities', 'status',
               existing_type=postgresql.ENUM('draft', 'active', 'completed', 'cancelled', name='new_activity_status'),
               type_=sa.String(length=20),
               existing_nullable=False,
               existing_server_default=sa.text("'draft'::new_activity_status"))
    op.drop_index(op.f('idx_new_activities_config_gin'), table_name='activities', postgresql_using='gin')
    op.drop_index(op.f('idx_new_activities_session_order'), table_name='activities')
    op.drop_index(op.f('idx_new_activities_status'), table_name='activities')
    op.drop_index(op.f('idx_new_activities_type'), table_name='activities')
    op.add_column('participants', sa.Column('nickname', sa.String(length=50), nullable=False))
    op.add_column('participants', sa.Column('last_seen', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('participants', sa.Column('connection_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('participants', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('participants', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('participants', 'id',
               existing_type=sa.INTEGER(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('participants_id_seq'::regclass)"))
    op.alter_column('participants', 'display_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('participants', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_unique_constraint('unique_session_nickname', 'participants', ['session_id', 'nickname'])
    op.drop_constraint(op.f('participants_session_id_fkey'), 'participants', type_='foreignkey')
    op.create_foreign_key(None, 'participants', 'sessions', ['session_id'], ['id'], ondelete='CASCADE')
    op.drop_column('participants', 'last_seen_at')
    op.alter_column('user_responses', 'participant_id',
               existing_type=sa.INTEGER(),
               type_=postgresql.UUID(as_uuid=True),
               existing_nullable=False)
    op.drop_index(op.f('idx_user_responses_created_at'), table_name='user_responses')
    op.drop_index(op.f('idx_user_responses_data_gin'), table_name='user_responses', postgresql_using='gin')
    op.drop_index(op.f('idx_user_responses_participant'), table_name='user_responses')
    op.drop_index(op.f('idx_user_responses_session_activity'), table_name='user_responses')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('idx_user_responses_session_activity'), 'user_responses', ['session_id', 'activity_id'], unique=False)
    op.create_index(op.f('idx_user_responses_participant'), 'user_responses', ['participant_id'], unique=False)
    op.create_index(op.f('idx_user_responses_data_gin'), 'user_responses', ['response_data'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_user_responses_created_at'), 'user_responses', ['created_at'], unique=False)
    op.alter_column('user_responses', 'participant_id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.add_column('participants', sa.Column('last_seen_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'participants', type_='foreignkey')
    op.create_foreign_key(op.f('participants_session_id_fkey'), 'participants', 'sessions', ['session_id'], ['id'])
    op.drop_constraint('unique_session_nickname', 'participants', type_='unique')
    op.alter_column('participants', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('participants', 'display_name',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('participants', 'id',
               existing_type=postgresql.UUID(as_uuid=True),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('participants_id_seq'::regclass)"))
    op.drop_column('participants', 'updated_at')
    op.drop_column('participants', 'created_at')
    op.drop_column('participants', 'connection_data')
    op.drop_column('participants', 'last_seen')
    op.drop_column('participants', 'nickname')
    op.create_index(op.f('idx_new_activities_type'), 'activities', ['type'], unique=False)
    op.create_index(op.f('idx_new_activities_status'), 'activities', ['status'], unique=False)
    op.create_index(op.f('idx_new_activities_session_order'), 'activities', ['session_id', 'order_index'], unique=False)
    op.create_index(op.f('idx_new_activities_config_gin'), 'activities', ['config'], unique=False, postgresql_using='gin')
    op.alter_column('activities', 'status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('draft', 'active', 'completed', 'cancelled', name='new_activity_status'),
               existing_nullable=False,
               existing_server_default=sa.text("'draft'::new_activity_status"))
    # ### end Alembic commands ###
