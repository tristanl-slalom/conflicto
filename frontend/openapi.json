{
  "openapi": "3.1.0",
  "info": {
    "title": "Caja Backend",
    "description": "Caja Live Event Engagement Platform Backend API",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/health/": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check",
        "description": "Health check endpoint.\n\nReturns service health status and checks database connectivity.",
        "operationId": "health_check_api_v1_health__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/ready": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Readiness Check",
        "description": "Readiness check endpoint.\n\nReturns whether the service is ready to accept requests.",
        "operationId": "readiness_check_api_v1_health_ready_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/live": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Liveness Check",
        "description": "Liveness check endpoint.\n\nReturns whether the service is alive and running.",
        "operationId": "liveness_check_api_v1_health_live_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Create Session",
        "description": "Create a new session.\n\nCreates a new live event session with generated QR and admin codes.\nThe session starts in DRAFT status.",
        "operationId": "create_session_api_v1_sessions__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "List Sessions",
        "description": "List all sessions with pagination.\n\nReturns a paginated list of all sessions, ordered by creation date (newest first).",
        "operationId": "list_sessions_api_v1_sessions__get",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionList"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get Session",
        "description": "Get detailed session information.\n\nReturns complete session details including activities and participants.",
        "operationId": "get_session_api_v1_sessions__session_id__get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDetail"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "sessions"
        ],
        "summary": "Update Session",
        "description": "Update an existing session.\n\nUpdates session details. Status transitions are tracked with timestamps.",
        "operationId": "update_session_api_v1_sessions__session_id__put",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "Delete Session",
        "description": "Delete a session.\n\nPermanently deletes a session and all associated data (activities, participants, responses).",
        "operationId": "delete_session_api_v1_sessions__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/code/{code}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get Session By Code",
        "description": "Get session by QR code or admin code.\n\nAllows participants to join via QR code or admins to access via admin code.",
        "operationId": "get_session_by_code_api_v1_sessions_code__code__get",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          },
          {
            "name": "code_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "qr",
              "title": "Code Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponse"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/activities/{activity_id}/responses": {
      "post": {
        "tags": [
          "user-responses"
        ],
        "summary": "Create Response",
        "description": "Create a new user response for an activity.",
        "operationId": "create_response_api_v1_sessions__session_id__activities__activity_id__responses_post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Activity Id"
            }
          },
          {
            "name": "participant_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Participant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResponseCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "user-responses"
        ],
        "summary": "Get Activity Responses",
        "description": "Get all responses for a specific activity with summary.",
        "operationId": "get_activity_responses_api_v1_sessions__session_id__activities__activity_id__responses_get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Activity Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/activities/{activity_id}/responses/{participant_id}": {
      "get": {
        "tags": [
          "user-responses"
        ],
        "summary": "Get Participant Response",
        "description": "Get a specific participant's response for an activity.",
        "operationId": "get_participant_response_api_v1_sessions__session_id__activities__activity_id__responses__participant_id__get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          },
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Activity Id"
            }
          },
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Participant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/UserResponse"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Participant Response Api V1 Sessions  Session Id  Activities  Activity Id  Responses  Participant Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/responses/{response_id}": {
      "put": {
        "tags": [
          "user-responses"
        ],
        "summary": "Update Response",
        "description": "Update an existing user response.",
        "operationId": "update_response_api_v1_responses__response_id__put",
        "parameters": [
          {
            "name": "response_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Response Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResponseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-responses"
        ],
        "summary": "Delete Response",
        "description": "Delete a user response.",
        "operationId": "delete_response_api_v1_responses__response_id__delete",
        "parameters": [
          {
            "name": "response_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Response Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/participants/{participant_id}/responses": {
      "get": {
        "tags": [
          "user-responses"
        ],
        "summary": "Get Participant Responses",
        "description": "Get all responses by a specific participant in a session.",
        "operationId": "get_participant_responses_api_v1_sessions__session_id__participants__participant_id__responses_get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          },
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Participant Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  },
                  "title": "Response Get Participant Responses Api V1 Sessions  Session Id  Participants  Participant Id  Responses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/activities": {
      "post": {
        "tags": [
          "activities"
        ],
        "summary": "Create Activity",
        "description": "Create a new activity for a session.",
        "operationId": "create_activity_api_v1_sessions__session_id__activities_post",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Session Activities",
        "description": "Get all activities for a session.",
        "operationId": "get_session_activities_api_v1_sessions__session_id__activities_get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ActivityStatus"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter activities by status",
              "title": "Status"
            },
            "description": "Filter activities by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activities/{activity_id}": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Activity",
        "description": "Get an activity by ID.",
        "operationId": "get_activity_api_v1_activities__activity_id__get",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "activities"
        ],
        "summary": "Update Activity",
        "description": "Update an existing activity.",
        "operationId": "update_activity_api_v1_activities__activity_id__put",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Activity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "activities"
        ],
        "summary": "Delete Activity",
        "description": "Delete an activity.",
        "operationId": "delete_activity_api_v1_activities__activity_id__delete",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Activity Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/activities/{activity_id}/status": {
      "patch": {
        "tags": [
          "activities"
        ],
        "summary": "Update Activity Status",
        "description": "Update activity status.",
        "operationId": "update_activity_status_api_v1_activities__activity_id__status_patch",
        "parameters": [
          {
            "name": "activity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Activity Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActivityStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/activities/active": {
      "get": {
        "tags": [
          "activities"
        ],
        "summary": "Get Active Activity",
        "description": "Get the currently active activity for a session.",
        "operationId": "get_active_activity_api_v1_sessions__session_id__activities_active_get",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/Activity"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Active Activity Api V1 Sessions  Session Id  Activities Active Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Activity": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of the activity"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "JSONB configuration data"
          },
          "order_index": {
            "type": "integer",
            "title": "Order Index",
            "description": "Order index for the activity",
            "default": 0
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "status": {
            "$ref": "#/components/schemas/ActivityStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "type",
          "id",
          "session_id",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "Activity",
        "description": "Schema for Activity response."
      },
      "ActivityCreate": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of the activity"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config",
            "description": "JSONB configuration data"
          },
          "order_index": {
            "type": "integer",
            "title": "Order Index",
            "description": "Order index for the activity",
            "default": 0
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status of the activity",
            "default": "draft"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ActivityCreate",
        "description": "Schema for creating a new Activity."
      },
      "ActivityList": {
        "properties": {
          "activities": {
            "items": {
              "$ref": "#/components/schemas/Activity"
            },
            "type": "array",
            "title": "Activities"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "activities",
          "total"
        ],
        "title": "ActivityList",
        "description": "Schema for list of activities."
      },
      "ActivityResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "activity_type": {
            "$ref": "#/components/schemas/ActivityType"
          },
          "configuration": {
            "additionalProperties": true,
            "type": "object",
            "title": "Configuration"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "order_index": {
            "type": "integer",
            "title": "Order Index"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "response_count": {
            "type": "integer",
            "title": "Response Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "session_id",
          "title",
          "description",
          "activity_type",
          "configuration",
          "is_active",
          "order_index",
          "started_at",
          "completed_at"
        ],
        "title": "ActivityResponse",
        "description": "Activity response model."
      },
      "ActivityStatus": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "completed",
          "cancelled"
        ],
        "title": "ActivityStatus",
        "description": "Activity status enumeration for activity framework."
      },
      "ActivityType": {
        "type": "string",
        "enum": [
          "poll",
          "word_cloud",
          "qa",
          "planning_poker"
        ],
        "title": "ActivityType",
        "description": "Activity type enumeration."
      },
      "ActivityUpdate": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "order_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order Index"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActivityStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ActivityUpdate",
        "description": "Schema for updating an Activity."
      },
      "ErrorResponse": {
        "properties": {
          "detail": {
            "type": "string",
            "title": "Detail"
          },
          "error_type": {
            "type": "string",
            "title": "Error Type",
            "default": "ValidationError"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "ErrorResponse",
        "description": "Error response model."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "default": "0.1.0"
          }
        },
        "type": "object",
        "title": "HealthResponse",
        "description": "Health check response model."
      },
      "ParticipantResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "role": {
            "$ref": "#/components/schemas/ParticipantRole"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "joined_at": {
            "type": "string",
            "format": "date-time",
            "title": "Joined At"
          },
          "last_seen_at": {
            "type": "string",
            "format": "date-time",
            "title": "Last Seen At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "session_id",
          "display_name",
          "role",
          "is_active",
          "joined_at",
          "last_seen_at"
        ],
        "title": "ParticipantResponse",
        "description": "Participant response model."
      },
      "ParticipantRole": {
        "type": "string",
        "enum": [
          "admin",
          "viewer",
          "participant"
        ],
        "title": "ParticipantRole",
        "description": "Participant role enumeration."
      },
      "SessionCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "max_participants": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 1.0,
            "title": "Max Participants",
            "default": 100
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "SessionCreate",
        "description": "Session creation request model."
      },
      "SessionDetail": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/SessionStatus"
          },
          "qr_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qr Code"
          },
          "admin_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin Code"
          },
          "max_participants": {
            "type": "integer",
            "title": "Max Participants"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "participant_count": {
            "type": "integer",
            "title": "Participant Count",
            "default": 0
          },
          "activity_count": {
            "type": "integer",
            "title": "Activity Count",
            "default": 0
          },
          "activities": {
            "items": {
              "$ref": "#/components/schemas/ActivityResponse"
            },
            "type": "array",
            "title": "Activities",
            "default": []
          },
          "participants": {
            "items": {
              "$ref": "#/components/schemas/ParticipantResponse"
            },
            "type": "array",
            "title": "Participants",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "title",
          "description",
          "status",
          "qr_code",
          "admin_code",
          "max_participants",
          "started_at",
          "completed_at"
        ],
        "title": "SessionDetail",
        "description": "Detailed session response with activities and participants."
      },
      "SessionList": {
        "properties": {
          "sessions": {
            "items": {
              "$ref": "#/components/schemas/SessionResponse"
            },
            "type": "array",
            "title": "Sessions"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          }
        },
        "type": "object",
        "required": [
          "sessions",
          "total",
          "offset",
          "limit"
        ],
        "title": "SessionList",
        "description": "Session list response model."
      },
      "SessionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "status": {
            "$ref": "#/components/schemas/SessionStatus"
          },
          "qr_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qr Code"
          },
          "admin_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Admin Code"
          },
          "max_participants": {
            "type": "integer",
            "title": "Max Participants"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "participant_count": {
            "type": "integer",
            "title": "Participant Count",
            "default": 0
          },
          "activity_count": {
            "type": "integer",
            "title": "Activity Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at",
          "title",
          "description",
          "status",
          "qr_code",
          "admin_code",
          "max_participants",
          "started_at",
          "completed_at"
        ],
        "title": "SessionResponse",
        "description": "Session response model."
      },
      "SessionStatus": {
        "type": "string",
        "enum": [
          "draft",
          "active",
          "completed"
        ],
        "title": "SessionStatus",
        "description": "Session status enumeration."
      },
      "SessionUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "max_participants": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1000.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Participants"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SessionStatus"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "SessionUpdate",
        "description": "Session update request model."
      },
      "UserResponse": {
        "properties": {
          "response_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Response Data",
            "description": "Activity-specific response data in JSON format"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "type": "integer",
            "title": "Session Id"
          },
          "activity_id": {
            "type": "string",
            "format": "uuid",
            "title": "Activity Id"
          },
          "participant_id": {
            "type": "integer",
            "title": "Participant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "response_data",
          "id",
          "session_id",
          "activity_id",
          "participant_id",
          "created_at",
          "updated_at"
        ],
        "title": "UserResponse",
        "description": "Schema for User Response with all fields."
      },
      "UserResponseCreate": {
        "properties": {
          "response_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Response Data",
            "description": "Activity-specific response data in JSON format"
          }
        },
        "type": "object",
        "required": [
          "response_data"
        ],
        "title": "UserResponseCreate",
        "description": "Schema for creating a User Response."
      },
      "UserResponseList": {
        "properties": {
          "responses": {
            "items": {
              "$ref": "#/components/schemas/UserResponse"
            },
            "type": "array",
            "title": "Responses"
          },
          "summary": {
            "$ref": "#/components/schemas/UserResponseSummary"
          }
        },
        "type": "object",
        "required": [
          "responses",
          "summary"
        ],
        "title": "UserResponseList",
        "description": "Schema for paginated User Response list with summary."
      },
      "UserResponseSummary": {
        "properties": {
          "total_responses": {
            "type": "integer",
            "title": "Total Responses"
          },
          "unique_participants": {
            "type": "integer",
            "title": "Unique Participants"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "total_responses",
          "unique_participants",
          "last_updated"
        ],
        "title": "UserResponseSummary",
        "description": "Schema for User Response summary statistics."
      },
      "UserResponseUpdate": {
        "properties": {
          "response_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Response Data",
            "description": "Activity-specific response data in JSON format"
          }
        },
        "type": "object",
        "required": [
          "response_data"
        ],
        "title": "UserResponseUpdate",
        "description": "Schema for updating a User Response."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}